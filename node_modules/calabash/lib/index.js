// Generated by CoffeeScript 1.6.3
var echo, filled, spawn, split, tasks,
  __slice = [].slice;

spawn = require("child_process").spawn;

echo = function(child) {
  child.stderr.pipe(process.stderr);
  return child.stdout.pipe(process.stdout);
};

split = function(string) {
  return string.split(" ");
};

filled = function(string) {
  return string.length > 0;
};

tasks = {};

exports["do"] = function() {
  var queue, _;
  _ = arguments[0], queue = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  return queue.map(split).forEach(function(array, index) {
    console.log('➤➤', queue[index]);
    return echo(spawn(array[0], array.slice(1)));
  });
};

exports.add = function() {
  var name, queue;
  name = arguments[0], queue = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  return tasks[name] = function() {
    return queue.map(split).forEach(function(array, index) {
      console.log('➤➤', queue[index]);
      return echo(spawn(array[0], array.slice(1)));
    });
  };
};

exports.go = function() {
  var name, query, task, _results;
  query = process.argv[2];
  if (query != null) {
    _results = [];
    for (name in tasks) {
      task = tasks[name];
      if (name.indexOf(query) >= 0) {
        _results.push(task());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  }
};
